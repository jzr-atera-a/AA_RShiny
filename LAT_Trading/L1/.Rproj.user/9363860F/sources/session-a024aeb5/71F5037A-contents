# Description: Interactive dashboard for private credit investment analysis with decision tree and forecasting

# Required libraries
library(shiny)
library(shinydashboard)
library(shinydashboardPlus)
library(shinyWidgets)
library(DT)
library(plotly)
library(visNetwork)
library(htmltools)
library(dplyr)
library(shinycssloaders)
library(shinyBS)
library(ggplot2)

# Define UI
ui <- dashboardPage(
  
  # Dashboard Header
  dashboardHeader(
    title = tagList(
      tags$span(class = "logo-lg", "Private Credit Dashboard"),
      tags$span(class = "logo-mini", "PC")
    ),
    titleWidth = 300
  ),
  
  # Dashboard Sidebar
  dashboardSidebar(
    width = 300,
    sidebarMenu(
      id = "sidebar",
      menuItem("Decision Tree", tabName = "decision_tree", icon = icon("sitemap")),
      menuItem("Input Parameters", tabName = "parameters", icon = icon("sliders-h")),
      menuItem("Analysis Results", tabName = "results", icon = icon("chart-line")),
      menuItem("Return Forecast", tabName = "forecast", icon = icon("trending-up")),
      menuItem("Documentation", tabName = "docs", icon = icon("book"))
    ),
    
    # Input Panel
    tags$div(
      style = "padding: 15px;",
      h4("Current Market Inputs", style = "color: white; margin-bottom: 15px;"),
      
      numericInput("target_return", 
                   "Target Return (%)", 
                   value = 8.5, 
                   min = 0, 
                   max = 25, 
                   step = 0.1),
      helpText("Valid range: 5% - 20%", style = "color: #bdc3c7; font-size: 11px;"),
      
      numericInput("fund_duration", 
                   "Max Fund Duration (years)", 
                   value = 9, 
                   min = 1, 
                   max = 20, 
                   step = 1),
      helpText("Valid range: 3 - 15 years", style = "color: #bdc3c7; font-size: 11px;"),
      
      numericInput("current_inflation", 
                   "Current Inflation (%)", 
                   value = 3.2, 
                   min = -2, 
                   max = 15, 
                   step = 0.1),
      helpText("Valid range: 0% - 10%", style = "color: #bdc3c7; font-size: 11px;"),
      
      numericInput("credit_spread", 
                   "Credit Spread (bps)", 
                   value = 275, 
                   min = 0, 
                   max = 2000, 
                   step = 25),
      helpText("Valid range: 100 - 1000 bps", style = "color: #bdc3c7; font-size: 11px;"),
      
      numericInput("liquidity_ratio", 
                   "Liquidity Coverage Ratio", 
                   value = 12, 
                   min = 1, 
                   max = 100, 
                   step = 1),
      helpText("Valid range: 5 - 50", style = "color: #bdc3c7; font-size: 11px;"),
      
      numericInput("ipo_decline", 
                   "IPO Volume Decline (%)", 
                   value = 68, 
                   min = -50, 
                   max = 100, 
                   step = 5),
      helpText("Valid range: 0% - 90%", style = "color: #bdc3c7; font-size: 11px;"),
      
      actionButton("analyze", "Analyze Investment", 
                   class = "btn-primary btn-block",
                   style = "margin-top: 15px; background-color: #d3d3d3; border-color: #d3d3d3; color: #333;")
    )
  ),
  
  # Dashboard Body
  dashboardBody(
    
    # Custom CSS
    tags$head(
      tags$style(HTML("
        /* VisNetwork dropdown styling */
        .vis-network .vis-manipulation .vis-button select,
        .vis-network .vis-configuration select,
        select {
          color: black !important;
          background-color: white !important;
        }
        
        /* Dropdown menu items */
        option {
          color: black !important;
          background-color: white !important;
        }
      
        /* Main theme colors */
        .skin-blue .main-header .navbar {
          background-color: #008A82 !important;
        }
        
        .skin-blue .main-header .logo {
          background-color: #002C3C !important;
        }
        
        .skin-blue .main-header .logo:hover {
          background-color: #008A82 !important;
        }
        
        .skin-blue .main-sidebar {
          background-color: #00A39A !important;
        }
        
        .skin-blue .sidebar-menu > li.header {
          background: #008A82 !important;
          color: white !important;
        }
        
        .skin-blue .sidebar-menu > li > a {
          color: white !important;
        }
        
        .skin-blue .sidebar-menu > li:hover > a,
        .skin-blue .sidebar-menu > li.active > a {
          background-color: #008A82 !important;
          color: white !important;
        }
        
        .content-wrapper, .right-side {
          background-color: #002C3C !important;
        }
        
        /* Box styling */
        .box {
          background: #00A39A !important;
          border-top: none !important;
          color: white !important;
        }
        
        .box-header {
          background: #00A39A !important;
          color: white !important;
        }
        
        .box-body {
          background: #00A39A !important;
          color: white !important;
        }
        
        .box-title {
          color: white !important;
        }
        
        /* Decision node styling */
        .decision-node {
          background: linear-gradient(135deg, #00A39A 0%, #008A82 100%);
          color: white;
          border-radius: 10px;
          padding: 15px;
          margin: 10px 0;
          box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }
        
        .positive-result {
          background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
          color: white;
          border-radius: 10px;
          padding: 20px;
          margin: 10px 0;
          box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }
        
        .negative-result {
          background: linear-gradient(135deg, #fc4a1a 0%, #f7b733 100%);
          color: white;
          border-radius: 10px;
          padding: 20px;
          margin: 10px 0;
          box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }
        
        .metric-box {
          background: white;
          border-radius: 8px;
          padding: 15px;
          margin: 10px 0;
          border-left: 4px solid #00A39A;
          box-shadow: 0 2px 10px rgba(0,0,0,0.1);
          color: #2c3e50 !important;
        }
        
        .threshold-met {
          border-left-color: #27ae60 !important;
        }
        
        .threshold-not-met {
          border-left-color: #e74c3c !important;
        }
        
        .validation-failed {
          border-left-color: #8e44ad !important;
        }
        
        .network-container {
          height: 600px;
          border: 1px solid #ddd;
          border-radius: 8px;
          background: white;
        }
        
        /* Value box customization */
        .small-box {
          background: #00A39A !important;
          color: white !important;
        }
        
        .small-box h3, .small-box p {
          color: white !important;
        }
        
        /* DataTable styling */
        .dataTables_wrapper {
          background: white !important;
          border-radius: 8px !important;
          padding: 15px !important;
        }
        
        .dataTables_wrapper select {
          color: #333 !important;
          background-color: white !important;
        }
        
        /* Form control styling in sidebar */
        .form-control {
          background-color: rgba(255,255,255,0.9) !important;
          border: 1px solid #bdc3c7 !important;
          color: #2c3e50 !important;
        }
        
        .form-control:focus {
          border-color: #008A82 !important;
          box-shadow: 0 0 0 0.2rem rgba(0, 163, 154, 0.25) !important;
        }
        
        /* Help text styling */
        .help-block {
          color: #bdc3c7 !important;
          font-size: 11px !important;
        }
        
        /* Node explanation styling */
        .node-explanation {
          background: white;
          border-radius: 8px;
          padding: 20px;
          margin: 15px 0;
          color: #2c3e50;
          box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .node-explanation h5 {
          color: #00A39A;
          font-weight: bold;
          margin-bottom: 10px;
        }
        
        /* Reference box styling */
        .reference-box {
          background: #f8f9fa;
          border: 1px solid #dee2e6;
          border-radius: 8px;
          padding: 15px;
          margin: 20px 0;
          font-size: 0.9em;
          color: #495057;
        }
        
        .reference-box h5 {
          color: #00A39A;
          margin-bottom: 10px;
          font-weight: bold;
        }
      "))
    ),
    
    tabItems(
      
      # Decision Tree Tab
      tabItem(
        tabName = "decision_tree",
        fluidRow(
          box(
            title = "Private Credit Investment Decision Tree",
            status = "primary",
            solidHeader = TRUE,
            width = 12,
            height = "700px",
            withSpinner(
              visNetworkOutput("decision_network", height = "600px"),
              color = "#00A39A"
            )
          )
        ),
        
        fluidRow(
          column(
            width = 6,
            box(
              title = "Decision Tree Node Explanations",
              status = "info",
              solidHeader = TRUE,
              width = NULL,
              div(class = "node-explanation",
                  h5("Node 1: Starting Point"),
                  p("Begin the private credit evaluation process by assessing current market conditions and investment requirements.")
              ),
              
              div(class = "node-explanation",
                  h5("Node 2: Return & Duration Analysis"),
                  p("Evaluate if target returns (≥8%) can be achieved within acceptable duration limits (≤10 years). Private credit typically offers 8.8-9.0% returns with 8-year average fund life.")
              ),
              
              div(class = "node-explanation",
                  h5("Node 3: Inflation Environment"),
                  p("Assess if current inflation (≥3% YoY) supports floating-rate advantage. Higher inflation environments favor private credit's floating-rate structure.")
              ),
              
              div(class = "node-explanation",
                  h5("Node 4: Credit Spread Premium"),
                  p("Determine if credit spreads (≥250 bps over bonds) justify illiquidity premium. Higher spreads compensate for reduced liquidity compared to public markets.")
              ),
              
              div(class = "node-explanation",
                  h5("Node 5: Liquidity Buffer"),
                  p("Verify adequate liquidity coverage (≥10x annual liabilities) to handle private credit's illiquid nature. Essential for institutional investors.")
              ),
              
              div(class = "node-explanation",
                  h5("Node 6: Exit Market Conditions"),
                  p("Evaluate if weak exit markets (≥50% IPO decline) favor hold-to-maturity strategies over private equity's exit-dependent returns.")
              )
            )
          ),
          
          column(
            width = 6,
            box(
              title = "Decision Path Analysis",
              status = "info",
              solidHeader = TRUE,
              width = NULL,
              withSpinner(
                htmlOutput("decision_path"),
                color = "#00A39A"
              )
            )
          )
        ),
        
        fluidRow(
          box(
            title = "How to Interpret the Decision Tree",
            status = "success",
            solidHeader = TRUE,
            width = 12,
            div(style = "color: white;",
                h4("Decision Tree Navigation Guide"),
                tags$ul(
                  tags$li(strong("Flow Direction:"), " Follow the arrows from the starting node through each decision point"),
                  tags$li(strong("Node Colors:"), " Blue (start), Red (decision points), Green (positive outcome), Orange (caution)"),
                  tags$li(strong("Decision Logic:"), " Each node represents a threshold that must be met for optimal private credit allocation"),
                  tags$li(strong("Final Outcomes:"), " Diamond-shaped nodes show final investment recommendations based on criteria met"),
                  tags$li(strong("Interactive Features:"), " Click and drag nodes, zoom in/out, and hover for additional information")
                ),
                br(),
                p(strong("Interpretation:"), " The more criteria passed (nodes leading to positive outcomes), the stronger the recommendation for private credit investment. A path through 5-6 positive nodes suggests strong market conditions for private credit allocation.")
            )
          )
        )
      ),
      
      # Parameters Tab
      tabItem(
        tabName = "parameters",
        fluidRow(
          box(
            title = "Investment Criteria Thresholds",
            status = "primary",
            solidHeader = TRUE,
            width = 6,
            
            h4("Return & Duration Criteria", style = "color: white;"),
            div(class = "metric-box",
                h5("Target Return Threshold"),
                p("Minimum: 8.0% | Maximum: 20.0%"),
                p("Private Credit Average: 8.8% - 9.0%"),
                p("Valid Range: 5.0% - 20.0%")
            ),
            
            div(class = "metric-box",
                h5("Duration Threshold"),
                p("Minimum: 3 years | Maximum: 15 years"),
                p("Target: ≤10 years"),
                p("Private Credit Average: 8 years vs PE: 10 years")
            ),
            
            h4("Market Environment Criteria", style = "color: white;"),
            div(class = "metric-box",
                h5("Inflation Threshold"),
                p("Trigger: ≥3.0% YoY"),
                p("Valid Range: 0% - 10%"),
                p("Floating rates provide hedge against inflation")
            )
          ),
          
          box(
            title = "Risk & Liquidity Criteria",
            status = "warning",
            solidHeader = TRUE,
            width = 6,
            
            h4("Credit Risk Metrics", style = "color: white;"),
            div(class = "metric-box",
                h5("Credit Spread Threshold"),
                p("Minimum: 250 basis points over bonds"),
                p("Valid Range: 100 - 1000 bps"),
                p("Compensates for illiquidity premium")
            ),
            
            h4("Liquidity Requirements", style = "color: white;"),
            div(class = "metric-box",
                h5("Liquidity Coverage Ratio"),
                p("Minimum: 10x annual liability needs"),
                p("Valid Range: 5 - 50"),
                p("Ensures ability to handle illiquidity")
            ),
            
            h4("Market Conditions", style = "color: white;"),
            div(class = "metric-box",
                h5("Exit Market Threshold"),
                p("IPO decline: ≥50% YoY indicates opportunity"),
                p("Valid Range: 0% - 90%"),
                p("Historical: $74.4B (2014) → $23.7B (2024)")
            )
          )
        ),
        
        fluidRow(
          box(
            title = "Benchmark Comparisons",
            status = "success",
            solidHeader = TRUE,
            width = 12,
            withSpinner(
              DT::dataTableOutput("benchmark_table"),
              color = "#00A39A"
            )
          )
        )
      ),
      
      # Results Tab
      tabItem(
        tabName = "results",
        fluidRow(
          valueBoxOutput("investment_decision", width = 4),
          valueBoxOutput("criteria_met", width = 4),
          valueBoxOutput("risk_score", width = 4)
        ),
        
        fluidRow(
          column(
            width = 8,
            box(
              title = "Detailed Analysis Results",
              status = "primary",
              solidHeader = TRUE,
              width = NULL,
              withSpinner(
                htmlOutput("detailed_results"),
                color = "#00A39A"
              )
            )
          ),
          
          column(
            width = 4,
            box(
              title = "Key Metrics Dashboard",
              status = "info",
              solidHeader = TRUE,
              width = NULL,
              withSpinner(
                plotlyOutput("metrics_radar"),
                color = "#00A39A"
              )
            )
          )
        ),
        
        fluidRow(
          box(
            title = "Recommendation Summary",
            status = "success",
            solidHeader = TRUE,
            width = 12,
            withSpinner(
              htmlOutput("recommendation_summary"),
              color = "#00A39A"
            )
          )
        )
      ),
      
      # Forecast Tab
      tabItem(
        tabName = "forecast",
        fluidRow(
          valueBoxOutput("investment_amount", width = 4),
          valueBoxOutput("expected_return_pessimistic", width = 4),
          valueBoxOutput("expected_return_optimistic", width = 4)
        ),
        
        fluidRow(
          box(
            title = "Private Credit Return Forecast - $100,000 Investment",
            status = "primary",
            solidHeader = TRUE,
            width = 12,
            withSpinner(
              plotlyOutput("forecast_chart", height = "500px"),
              color = "#00A39A"
            )
          )
        ),
        
        fluidRow(
          column(
            width = 6,
            box(
              title = "Scenario Assumptions",
              status = "info",
              solidHeader = TRUE,
              width = NULL,
              div(style = "color: white;",
                  h5("Pessimistic Scenario (6.5% annual return)"),
                  tags$ul(
                    tags$li("Economic downturn affects borrower performance"),
                    tags$li("Increased default rates (1.5% vs historical 0.9%)"),
                    tags$li("Compressed spreads due to competition"),
                    tags$li("Lower interest rate environment")
                  ),
                  
                  h5("Moderate Scenario (8.8% annual return)"),
                  tags$ul(
                    tags$li("Current market conditions persist"),
                    tags$li("Historical average performance maintained"),
                    tags$li("Stable credit environment"),
                    tags$li("Normal market volatility")
                  ),
                  
                  h5("Optimistic Scenario (12.0% annual return)"),
                  tags$ul(
                    tags$li("Rising interest rate environment"),
                    tags$li("Strong floating-rate advantage"),
                    tags$li("Reduced bank competition"),
                    tags$li("Premium pricing on new deals")
                  )
              )
            )
          ),
          
          column(
            width = 6,
            box(
              title = "Forecast Methodology",
              status = "warning",
              solidHeader = TRUE,
              width = NULL,
              div(style = "color: white;",
                  p("Projections based on compound annual growth rate (CAGR) applied to $100,000 initial investment over the selected fund duration."),
                  p(strong("Key Assumptions:")),
                  tags$ul(
                    tags$li("Annual compounding of returns"),
                    tags$li("No interim distributions modeled"),
                    tags$li("Scenarios reflect different market conditions"),
                    tags$li("Returns are gross of fees (typically 1-2% management + 20% carry)")
                  ),
                  p(strong("Risk Factors:")), 
                  p("Actual returns may vary significantly due to market conditions, fund selection, vintage year effects, and economic cycles.")
              )
            )
          )
        ),
        
        fluidRow(
          box(
            title = "References and Data Sources",
            status = "success",
            solidHeader = TRUE,
            width = 12,
            div(class = "reference-box",
                h5("Harvard Style References"),
                tags$ol(
                  tags$li("McKinsey & Company (2025). 'Global Private Markets Report 2025: Braced for shifting weather'. Available at: https://www.mckinsey.com/industries/private-capital/our-insights/global-private-markets-report [Accessed: June 2025]."),
                  tags$li("Bloomberg (2024). 'Era of Private Credit Returns Beating Private Equity Is Nearing an End', November 7. Available at: https://www.bloomberg.com/news/articles/2024-11-07/era-of-direct-lender-returns-beating-private-equity-nears-end [Accessed: June 2025]."),
                  tags$li("Morgan Stanley (2024). 'Private Credit Market: 2024 Outlook & Opportunities'. Available at: https://www.morganstanley.com/ideas/private-credit-outlook-considerations [Accessed: June 2025]."),
                  tags$li("Northleaf Capital Partners (2024). 'Private Credit Market Update: Q4-2024'. Available at: https://www.northleafcapital.com/news/private-credit-market-update-q4-2024 [Accessed: June 2025]."),
                  tags$li("Adams Street Partners (2024). 'Private Credit vs. Private Equity: Analyzing Risk and Return', April 16. Available at: https://www.adamsstreetpartners.com/insights/will-private-credit-returns-surpass-private-equity/ [Accessed: June 2025]."),
                  tags$li("Bank for International Settlements (2025). 'The global drivers of private credit', BIS Quarterly Review, February. Available at: https://www.bis.org/publ/qtrpdf/r_qt2503b.htm [Accessed: June 2025]."),
                  tags$li("International Monetary Fund (2024). 'Global Financial Stability Report, Chapter 2', April. Available at: https://www.imf.org/-/media/Files/Publications/GFSR/2024/April/English/ch2.ashx [Accessed: June 2025].")
                ),
                
                p(strong("Note:"), " Return scenarios are based on industry data from the above sources, which report private credit returns ranging from 6-15% depending on market conditions, strategy, and vintage year. Historical performance indicates average returns of 8.8-9.0% for direct lending strategies.")
            )
          )
        )
      ),
      
      # Documentation Tab
      tabItem(
        tabName = "docs",
        fluidRow(
          box(
            title = "Decision Tree Documentation",
            status = "primary",
            solidHeader = TRUE,
            width = 12,
            
            h3("Private Credit Investment Framework", style = "color: white;"),
            
            h4("1. Return & Duration Analysis", style = "color: white;"),
            p("Evaluates whether private credit meets return targets with acceptable duration risk.", style = "color: white;"),
            tags$ul(style = "color: white;",
                    tags$li("Target return threshold: 8-20% annualized"),
                    tags$li("Duration preference: 3-15 years, target ≤10 years"),
                    tags$li("Volatility consideration: Lower than private equity")
            ),
            
            h4("2. Market Environment Assessment", style = "color: white;"),
            p("Analyzes inflation and interest rate conditions that favor floating-rate structures.", style = "color: white;"),
            tags$ul(style = "color: white;",
                    tags$li("Inflation trigger: ≥3% YoY (valid range: 0-10%)"),
                    tags$li("Rate volatility: Benefits floating-rate loans"),
                    tags$li("Base rate adjustments: Automatic hedge mechanism")
            ),
            
            h4("3. Credit Risk vs Liquidity Trade-off", style = "color: white;"),
            p("Weighs superior credit metrics against illiquidity costs.", style = "color: white;"),
            tags$ul(style = "color: white;",
                    tags$li("Default rate advantage: 0.9% vs 1.5% for high-yield"),
                    tags$li("Security position: 85%+ first-lien loans"),
                    tags$li("Spread requirement: ≥250bps over bonds (valid: 100-1000bps)")
            ),
            
            h4("4. Portfolio Liquidity Analysis", style = "color: white;"),
            p("Ensures adequate liquidity buffers for institutional investors.", style = "color: white;"),
            tags$ul(style = "color: white;",
                    tags$li("Coverage ratio: ≥10x annual liabilities (valid: 5-50x)"),
                    tags$li("Ideal investors: Pension funds, insurance companies"),
                    tags$li("Cash flow matching: Steady income vs predictable outflows")
            ),
            
            h4("5. Exit Market Conditions", style = "color: white;"),
            p("Considers market conditions that make hold-to-maturity strategies attractive.", style = "color: white;"),
            tags$ul(style = "color: white;",
                    tags$li("IPO decline threshold: ≥50% YoY (valid: 0-90%)"),
                    tags$li("PE exit bottlenecks: Reduced liquidity events"),
                    tags$li("PC advantage: No dependence on exit markets")
            )
          )
        )
      )
    )
  ),
  
  skin = "blue"
)

# Define Server
server <- function(input, output, session) {
  
  # Validation function
  validate_inputs <- function() {
    validation_results <- list()
    
    # Return validation (5-20%)
    validation_results$return_valid <- input$target_return >= 5 && input$target_return <= 20
    validation_results$return_pass <- input$target_return >= 8.0 && input$target_return <= 20
    
    # Duration validation (3-15 years)
    validation_results$duration_valid <- input$fund_duration >= 3 && input$fund_duration <= 15
    validation_results$duration_pass <- input$fund_duration <= 10 && input$fund_duration >= 3
    
    # Inflation validation (0-10%)
    validation_results$inflation_valid <- input$current_inflation >= 0 && input$current_inflation <= 10
    validation_results$inflation_pass <- input$current_inflation >= 3.0 && input$current_inflation <= 10
    
    # Credit spread validation (100-1000 bps)
    validation_results$spread_valid <- input$credit_spread >= 100 && input$credit_spread <= 1000
    validation_results$spread_pass <- input$credit_spread >= 250 && input$credit_spread <= 1000
    
    # Liquidity validation (5-50)
    validation_results$liquidity_valid <- input$liquidity_ratio >= 5 && input$liquidity_ratio <= 50
    validation_results$liquidity_pass <- input$liquidity_ratio >= 10 && input$liquidity_ratio <= 50
    
    # IPO decline validation (0-90%)
    validation_results$ipo_valid <- input$ipo_decline >= 0 && input$ipo_decline <= 90
    validation_results$ipo_pass <- input$ipo_decline >= 50 && input$ipo_decline <= 90
    
    return(validation_results)
  }
  
  # Generate forecast scenarios based on current inputs
  generate_forecast <- function() {
    validation <- validate_inputs()
    
    # Base scenarios (industry averages from research)
    base_pessimistic <- 6.5  # Lower end during stress periods
    base_moderate <- 8.8     # Historical average for direct lending
    base_optimistic <- 12.0  # Upper end in favorable conditions
    
    # Adjust scenarios based on current market conditions
    # Inflation adjustment
    inflation_adj <- ifelse(input$current_inflation >= 3, 0.5, -0.5)
    
    # Credit spread adjustment
    spread_adj <- ifelse(input$credit_spread >= 300, 0.3, 
                         ifelse(input$credit_spread >= 250, 0, -0.3))
    
    # Apply adjustments
    pessimistic_return <- max(4.0, base_pessimistic + inflation_adj * 0.5 + spread_adj * 0.5)
    moderate_return <- base_moderate + inflation_adj + spread_adj
    optimistic_return <- min(15.0, base_optimistic + inflation_adj * 1.5 + spread_adj * 1.5)
    
    return(list(
      pessimistic = pessimistic_return,
      moderate = moderate_return,
      optimistic = optimistic_return
    ))
  }
  
  # Reactive values for analysis
  analysis_results <- reactiveValues(
    decision = "Not Analyzed",
    criteria_met = 0,
    risk_score = 0,
    details = list(),
    validation = list()
  )
  
  # Create decision tree network
  output$decision_network <- renderVisNetwork({
    
    # Define nodes
    nodes <- data.frame(
      id = 1:11,
      label = c(
        "Start: PC\nEvaluation",
        "Return &\nDuration\n8-20%, 3-15yr",
        "Inflation\nEnvironment\n≥3% YoY",
        "Credit Spread\nPremium\n≥250 bps",
        "Liquidity\nBuffer\n≥10x ratio",
        "Exit Market\nConditions\n≥50% decline",
        "INVEST\nRecommended",
        "CAUTION\nWait/Reassess",
        "Market\nConditions",
        "Portfolio\nFit",
        "Final\nDecision"
      ),
      shape = c(rep("box", 6), "diamond", "diamond", rep("ellipse", 3)),
      color = c(
        "#00A39A",  # Start
        "#e74c3c",  # Return/Duration
        "#e74c3c",  # Inflation
        "#e74c3c",  # Credit Spread
        "#e74c3c",  # Liquidity
        "#e74c3c",  # Exit Market
        "#27ae60",  # Invest
        "#f39c12",  # Caution
        "#9b59b6",  # Market Conditions
        "#9b59b6",  # Portfolio Fit
        "#34495e"   # Final Decision
      ),
      font.size = 12,
      font.color = "white"
    )
    
    # Define edges
    edges <- data.frame(
      from = c(1, 2, 3, 4, 5, 6, 2, 3, 4, 5, 6),
      to = c(2, 3, 4, 5, 6, 7, 8, 8, 8, 8, 8),
      arrows = "to",
      color = "#7f8c8d",
      width = 2
    )
    
    visNetwork(nodes, edges, width = "100%", height = "600px") %>%
      visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
      visLayout(randomSeed = 123) %>%
      visPhysics(enabled = FALSE) %>%
      visInteraction(dragNodes = TRUE, dragView = TRUE, zoomView = TRUE)
  })
  
  # Perform analysis when button is clicked
  observeEvent(input$analyze, {
    
    validation <- validate_inputs()
    
    # Store validation results
    analysis_results$validation <- validation
    
    # Check if all inputs are valid
    all_valid <- all(c(validation$return_valid, validation$duration_valid, 
                       validation$inflation_valid, validation$spread_valid,
                       validation$liquidity_valid, validation$ipo_valid))
    
    if (!all_valid) {
      analysis_results$decision <- "INVALID INPUTS"
      analysis_results$criteria_met <- 0
      analysis_results$risk_score <- 0
      analysis_results$details <- validation
      return()
    }
    
    # Count criteria met (only if valid)
    criteria_met <- sum(validation$return_pass, validation$duration_pass, 
                        validation$inflation_pass, validation$spread_pass,
                        validation$liquidity_pass, validation$ipo_pass)
    
    # Determine decision
    if (criteria_met >= 5) {
      decision <- "INVEST"
      risk_score <- max(0, 100 - (6 - criteria_met) * 10)
    } else if (criteria_met >= 3) {
      decision <- "CAUTION"
      risk_score <- 40 + criteria_met * 10
    } else {
      decision <- "AVOID"
      risk_score <- criteria_met * 10
    }
    
    # Update reactive values
    analysis_results$decision <- decision
    analysis_results$criteria_met <- criteria_met
    analysis_results$risk_score <- risk_score
    analysis_results$details <- validation
  })
  
  # Value boxes for results tab
  output$investment_decision <- renderValueBox({
    valueBox(
      value = analysis_results$decision,
      subtitle = "Investment Recommendation",
      icon = icon("chart-line"),
      color = if (analysis_results$decision == "INVEST") "green" 
      else if (analysis_results$decision == "CAUTION") "yellow" 
      else if (analysis_results$decision == "INVALID INPUTS") "purple"
      else "red"
    )
  })
  
  output$criteria_met <- renderValueBox({
    valueBox(
      value = paste(analysis_results$criteria_met, "/ 6"),
      subtitle = "Criteria Met",
      icon = icon("check-circle"),
      color = if (analysis_results$criteria_met >= 5) "green" 
      else if (analysis_results$criteria_met >= 3) "yellow" 
      else "red"
    )
  })
  
  output$risk_score <- renderValueBox({
    valueBox(
      value = paste0(analysis_results$risk_score, "%"),
      subtitle = "Confidence Score",
      icon = icon("shield-alt"),
      color = if (analysis_results$risk_score >= 75) "green" 
      else if (analysis_results$risk_score >= 50) "yellow" 
      else "red"
    )
  })
  
  # Value boxes for forecast tab
  output$investment_amount <- renderValueBox({
    valueBox(
      value = "$100,000",
      subtitle = "Initial Investment",
      icon = icon("dollar-sign"),
      color = "blue"
    )
  })
  
  output$expected_return_pessimistic <- renderValueBox({
    forecast_data <- generate_forecast()
    final_value <- 100000 * (1 + forecast_data$pessimistic/100)^input$fund_duration
    valueBox(
      value = paste0("$", format(round(final_value), big.mark = ",")),
      subtitle = paste0("Pessimistic (", round(forecast_data$pessimistic, 1), "%)"),
      icon = icon("arrow-down"),
      color = "red"
    )
  })
  
  output$expected_return_optimistic <- renderValueBox({
    forecast_data <- generate_forecast()
    final_value <- 100000 * (1 + forecast_data$optimistic/100)^input$fund_duration
    valueBox(
      value = paste0("$", format(round(final_value), big.mark = ",")),
      subtitle = paste0("Optimistic (", round(forecast_data$optimistic, 1), "%)"),
      icon = icon("arrow-up"),
      color = "green"
    )
  })
  
  # Decision path analysis
  output$decision_path <- renderUI({
    if (analysis_results$decision == "Not Analyzed") {
      return(p("Please click 'Analyze Investment' to see results.", style = "color: white;"))
    }
    
    if (analysis_results$decision == "INVALID INPUTS") {
      return(
        div(
          h4("❌ INVALID INPUT VALUES", style = "color: #e74c3c;"),
          p("Please correct the following invalid inputs:", style = "color: white;"),
          if (!analysis_results$validation$return_valid) p("• Return must be between 5% and 20%", style = "color: #e74c3c;"),
          if (!analysis_results$validation$duration_valid) p("• Duration must be between 3 and 15 years", style = "color: #e74c3c;"),
          if (!analysis_results$validation$inflation_valid) p("• Inflation must be between 0% and 10%", style = "color: #e74c3c;"),
          if (!analysis_results$validation$spread_valid) p("• Credit spread must be between 100 and 1000 bps", style = "color: #e74c3c;"),
          if (!analysis_results$validation$liquidity_valid) p("• Liquidity ratio must be between 5 and 50", style = "color: #e74c3c;"),
          if (!analysis_results$validation$ipo_valid) p("• IPO decline must be between 0% and 90%", style = "color: #e74c3c;")
        )
      )
    }
    
    details <- analysis_results$details
    
    get_box_class <- function(valid, pass) {
      if (!valid) return("metric-box validation-failed")
      if (pass) return("metric-box threshold-met")
      return("metric-box threshold-not-met")
    }
    
    criteria_html <- tagList(
      div(class = get_box_class(details$return_valid, details$return_pass),
          h5("Return Criteria"),
          p(paste("Target:", input$target_return, "% | Threshold: 8.0-20.0%")),
          p(if (!details$return_valid) "❌ INVALID RANGE" else if (details$return_pass) "✓ PASSED" else "✗ FAILED")
      ),
      
      div(class = get_box_class(details$duration_valid, details$duration_pass),
          h5("Duration Criteria"),
          p(paste("Max Duration:", input$fund_duration, "years | Threshold: ≤10 years (Valid: 3-15)")),
          p(if (!details$duration_valid) "❌ INVALID RANGE" else if (details$duration_pass) "✓ PASSED" else "✗ FAILED")
      ),
      
      div(class = get_box_class(details$inflation_valid, details$inflation_pass),
          h5("Inflation Environment"),
          p(paste("Current Inflation:", input$current_inflation, "% | Threshold: ≥3.0% (Valid: 0-10%)")),
          p(if (!details$inflation_valid) "❌ INVALID RANGE" else if (details$inflation_pass) "✓ PASSED" else "✗ FAILED")
      ),
      
      div(class = get_box_class(details$spread_valid, details$spread_pass),
          h5("Credit Spread Premium"),
          p(paste("Current Spread:", input$credit_spread, "bps | Threshold: ≥250 bps (Valid: 100-1000)")),
          p(if (!details$spread_valid) "❌ INVALID RANGE" else if (details$spread_pass) "✓ PASSED" else "✗ FAILED")
      ),
      
      div(class = get_box_class(details$liquidity_valid, details$liquidity_pass),
          h5("Liquidity Coverage"),
          p(paste("Coverage Ratio:", input$liquidity_ratio, "x | Threshold: ≥10x (Valid: 5-50)")),
          p(if (!details$liquidity_valid) "❌ INVALID RANGE" else if (details$liquidity_pass) "✓ PASSED" else "✗ FAILED")
      ),
      
      div(class = get_box_class(details$ipo_valid, details$ipo_pass),
          h5("Exit Market Conditions"),
          p(paste("IPO Decline:", input$ipo_decline, "% | Threshold: ≥50% (Valid: 0-90%)")),
          p(if (!details$ipo_valid) "❌ INVALID RANGE" else if (details$ipo_pass) "✓ PASSED" else "✗ FAILED")
      )
    )
    
    return(criteria_html)
  })
  
  # Detailed results
  output$detailed_results <- renderUI({
    if (analysis_results$decision == "Not Analyzed") {
      return(p("Analysis pending...", style = "color: white;"))
    }
    
    if (analysis_results$decision == "INVALID INPUTS") {
      return(
        div(class = "negative-result",
            h4("❌ CANNOT PROCEED - INVALID INPUTS"),
            p("Please correct all input values to be within valid ranges before analysis can proceed."),
            p(strong("Action Required: Review and correct all highlighted input parameters"))
        )
      )
    }
    
    if (analysis_results$decision == "INVEST") {
      return(
        div(class = "positive-result",
            h4("✓ INVESTMENT RECOMMENDED"),
            p("Market conditions strongly favor private credit investment."),
            tags$ul(
              tags$li("Expected returns exceed threshold with acceptable duration"),
              tags$li("Market environment supports floating-rate advantage"),
              tags$li("Credit risk premium justifies illiquidity"),
              tags$li("Portfolio has adequate liquidity buffers"),
              tags$li("Exit market conditions favor hold-to-maturity strategy")
            ),
            p(strong("Recommended Allocation: 5-15% of total portfolio"))
        )
      )
    } else if (analysis_results$decision == "CAUTION") {
      return(
        div(class = "negative-result",
            h4("⚠ PROCEED WITH CAUTION"),
            p("Some favorable conditions present, but key risks remain."),
            p("Consider waiting for better market conditions or adjusting strategy."),
            p(strong("Recommended Action: Monitor conditions and reassess quarterly"))
        )
      )
    } else {
      return(
        div(class = "negative-result",
            h4("✗ INVESTMENT NOT RECOMMENDED"),
            p("Current conditions do not support private credit investment."),
            p("Multiple criteria unmet - consider alternative strategies."),
            p(strong("Recommended Action: Wait for improved market conditions"))
        )
      )
    }
  })
  
  # Benchmark table
  output$benchmark_table <- DT::renderDataTable({
    benchmark_data <- data.frame(
      Metric = c("Average Return", "Fund Duration", "Default Rate", "First-Lien %", "Volatility"),
      `Private Credit` = c("8.8% - 9.0%", "8 years", "0.9%", "85%+", "Lower"),
      `Private Equity` = c("Similar", "10 years", "N/A", "N/A", "Higher"),
      `High-Yield Bonds` = c("Variable", "N/A", "1.5%", "Varies", "Moderate"),
      `Valid Range` = c("5% - 20%", "3 - 15 years", "0% - 2%", "50% - 100%", "N/A"),
      Threshold = c("≥8.0%", "≤10 years", "<1.0%", ">80%", "Lower preferred")
    )
    
    DT::datatable(benchmark_data, 
                  options = list(pageLength = 10, searching = FALSE, dom = 't'),
                  rownames = FALSE) %>%
      DT::formatStyle(columns = 1:6, fontSize = '12px', color = '#2c3e50')
  }, server = FALSE)
  
  # Metrics radar chart with correct percentages
  output$metrics_radar <- renderPlotly({
    if (analysis_results$decision == "Not Analyzed") {
      return(NULL)
    }
    
    if (analysis_results$decision == "INVALID INPUTS") {
      # Show validation status
      validation <- analysis_results$validation
      categories <- c("Return", "Duration", "Inflation", "Spread", "Liquidity", "Exit Market")
      values <- c(
        ifelse(validation$return_valid, 50, 0),
        ifelse(validation$duration_valid, 50, 0),
        ifelse(validation$inflation_valid, 50, 0),
        ifelse(validation$spread_valid, 50, 0),
        ifelse(validation$liquidity_valid, 50, 0),
        ifelse(validation$ipo_valid, 50, 0)
      )
      
      plot_ly(
        type = 'scatterpolar',
        r = values,
        theta = categories,
        fill = 'toself',
        mode = 'markers+lines',
        line = list(color = '#e74c3c'),
        marker = list(color = '#e74c3c', size = 8),
        fillcolor = 'rgba(231, 76, 60, 0.3)'
      ) %>%
        layout(
          polar = list(
            radialaxis = list(
              visible = TRUE,
              range = c(0, 100),
              tickvals = c(0, 25, 50, 75, 100),
              ticktext = c("Invalid", "25%", "50%", "75%", "100%")
            )
          ),
          showlegend = FALSE,
          title = list(text = "Input Validation Status", font = list(color = "white"))
        )
    } else {
      # Calculate actual percentages based on thresholds
      details <- analysis_results$details
      
      # Return percentage: scale 8-20% to 0-100%
      return_pct <- if (!details$return_valid) 0 else {
        if (input$target_return < 8) 0
        else min(100, (input$target_return - 8) / (20 - 8) * 100)
      }
      
      # Duration percentage: scale inversely (lower duration = higher score)
      duration_pct <- if (!details$duration_valid) 0 else {
        if (input$fund_duration > 10) max(0, 100 - (input$fund_duration - 10) * 10)
        else 100
      }
      
      # Inflation percentage: scale 3-10% to 0-100%
      inflation_pct <- if (!details$inflation_valid) 0 else {
        if (input$current_inflation < 3) 0
        else min(100, (input$current_inflation - 3) / (10 - 3) * 100)
      }
      
      # Spread percentage: scale 250-1000bps to 0-100%
      spread_pct <- if (!details$spread_valid) 0 else {
        if (input$credit_spread < 250) 0
        else min(100, (input$credit_spread - 250) / (1000 - 250) * 100)
      }
      
      # Liquidity percentage: scale 10-50 to 0-100%
      liquidity_pct <- if (!details$liquidity_valid) 0 else {
        if (input$liquidity_ratio < 10) 0
        else min(100, (input$liquidity_ratio - 10) / (50 - 10) * 100)
      }
      
      # IPO decline percentage: scale 50-90% to 0-100%
      ipo_pct <- if (!details$ipo_valid) 0 else {
        if (input$ipo_decline < 50) 0
        else min(100, (input$ipo_decline - 50) / (90 - 50) * 100)
      }
      
      categories <- c("Return", "Duration", "Inflation", "Spread", "Liquidity", "Exit Market")
      values <- c(return_pct, duration_pct, inflation_pct, spread_pct, liquidity_pct, ipo_pct)
      
      plot_ly(
        type = 'scatterpolar',
        r = values,
        theta = categories,
        fill = 'toself',
        mode = 'markers+lines',
        line = list(color = '#00A39A'),
        marker = list(color = '#00A39A', size = 8),
        fillcolor = 'rgba(0, 163, 154, 0.3)'
      ) %>%
        layout(
          polar = list(
            radialaxis = list(
              visible = TRUE,
              range = c(0, 100),
              tickvals = c(0, 25, 50, 75, 100),
              ticktext = c("0%", "25%", "50%", "75%", "100%")
            )
          ),
          showlegend = FALSE,
          title = list(text = "Criteria Performance", font = list(color = "white")),
          paper_bgcolor = 'rgba(0,0,0,0)',
          plot_bgcolor = 'rgba(0,0,0,0)'
        )
    }
  })
  
  # Forecast chart
  output$forecast_chart <- renderPlotly({
    forecast_data <- generate_forecast()
    years <- 0:input$fund_duration
    
    # Calculate compound growth for each scenario
    pessimistic_values <- 100000 * (1 + forecast_data$pessimistic/100)^years
    moderate_values <- 100000 * (1 + forecast_data$moderate/100)^years
    optimistic_values <- 100000 * (1 + forecast_data$optimistic/100)^years
    
    # Create data frame for plotting
    plot_data <- data.frame(
      Year = rep(years, 3),
      Value = c(pessimistic_values, moderate_values, optimistic_values),
      Scenario = rep(c("Pessimistic", "Moderate", "Optimistic"), each = length(years))
    )
    
    # Create plotly chart
    p <- plot_ly(data = plot_data, x = ~Year, y = ~Value, color = ~Scenario, type = 'scatter', mode = 'lines+markers',
                 colors = c("#e74c3c", "#00A39A", "#27ae60")) %>%
      layout(
        title = list(text = "Private Credit Investment Growth Forecast", font = list(color = "black", size = 16)),
        xaxis = list(title = "Years", color = "black", gridcolor = "rgba(0,0,0,0.2)"),
        yaxis = list(title = "Investment Value ($)", color = "black", gridcolor = "rgba(0,0,0,0.2)",
                     tickformat = "$,.0f"),
        paper_bgcolor = 'white',
        plot_bgcolor = 'white',
        font = list(color = "black"),
        legend = list(font = list(color = "black"))
      ) %>%
      add_annotations(
        x = input$fund_duration * 0.7,
        y = max(optimistic_values) * 0.8,
        text = paste0("Final Values at Year ", input$fund_duration, ":<br>",
                      "Pessimistic: $", format(round(tail(pessimistic_values, 1)), big.mark = ","), "<br>",
                      "Moderate: $", format(round(tail(moderate_values, 1)), big.mark = ","), "<br>",
                      "Optimistic: $", format(round(tail(optimistic_values, 1)), big.mark = ",")),
        showarrow = FALSE,
        bgcolor = "rgba(0, 163, 154, 0.8)",
        bordercolor = "white",
        font = list(color = "white", size = 12)
      )
    
    return(p)
  })
  
  # Recommendation summary
  output$recommendation_summary <- renderUI({
    if (analysis_results$decision == "Not Analyzed") {
      return(p("Complete analysis to see recommendations.", style = "color: white;"))
    }
    
    if (analysis_results$decision == "INVALID INPUTS") {
      invalid_count <- sum(!c(analysis_results$validation$return_valid, 
                              analysis_results$validation$duration_valid,
                              analysis_results$validation$inflation_valid, 
                              analysis_results$validation$spread_valid,
                              analysis_results$validation$liquidity_valid, 
                              analysis_results$validation$ipo_valid))
      
      summary_text <- paste0(
        "❌ Analysis cannot proceed: ", invalid_count, " input parameter(s) are outside valid ranges. ",
        "Please review and correct all highlighted inputs before proceeding with investment analysis."
      )
      
      next_steps <- "Next steps: Correct invalid inputs and re-run analysis. Ensure all parameters fall within documented valid ranges."
      
    } else {
      summary_text <- paste0(
        "Based on current market inputs, ", analysis_results$criteria_met, " out of 6 criteria are met. ",
        "The investment recommendation is: ", strong(analysis_results$decision), ". ",
        "Confidence score: ", analysis_results$risk_score, "%."
      )
      
      next_steps <- if (analysis_results$decision == "INVEST") {
        "Next steps: Proceed with due diligence on specific private credit funds and consider 5-15% portfolio allocation."
      } else if (analysis_results$decision == "CAUTION") {
        "Next steps: Monitor market conditions quarterly and reassess when more criteria are met."
      } else {
        "Next steps: Focus on alternative investment strategies until market conditions improve."
      }
    }
    
    return(
      div(
        p(summary_text, style = "color: white;"),
        br(),
        p(strong("Next Steps: ", style = "color: white;"), next_steps, style = "color: white;")
      )
    )
  })
}

# Run the application
shinyApp(ui = ui, server = server)